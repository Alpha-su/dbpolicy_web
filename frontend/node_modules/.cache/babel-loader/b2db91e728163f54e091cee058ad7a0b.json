{"remainingRequest":"/home/glsu/dbpolicy_web/frontend/node_modules/babel-loader/lib/index.js!/home/glsu/dbpolicy_web/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/glsu/dbpolicy_web/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/glsu/dbpolicy_web/frontend/src/views/excel/merge-header.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/glsu/dbpolicy_web/frontend/src/views/excel/merge-header.vue","mtime":1627300263163},{"path":"/home/glsu/dbpolicy_web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/glsu/dbpolicy_web/frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/glsu/dbpolicy_web/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/glsu/dbpolicy_web/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIGZyb20gIi9ob21lL2dsc3UvZGJwb2xpY3lfd2ViL2Zyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBmZXRjaExpc3QgfSBmcm9tICdAL2FwaS9hcnRpY2xlJzsKaW1wb3J0IHsgcGFyc2VUaW1lIH0gZnJvbSAnQC91dGlscyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTWVyZ2VIZWFkZXInLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaXN0OiBudWxsLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgZG93bmxvYWRMb2FkaW5nOiBmYWxzZQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZmV0Y2hEYXRhOiBmdW5jdGlvbiBmZXRjaERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZTsKICAgICAgZmV0Y2hMaXN0KHRoaXMubGlzdFF1ZXJ5KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLmxpc3QgPSByZXNwb25zZS5kYXRhLml0ZW1zOwogICAgICAgIF90aGlzLmxpc3RMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZURvd25sb2FkOiBmdW5jdGlvbiBoYW5kbGVEb3dubG9hZCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLmRvd25sb2FkTG9hZGluZyA9IHRydWU7CiAgICAgIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZChyZXF1aXJlKCdAL3ZlbmRvci9FeHBvcnQyRXhjZWwnKSk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKGV4Y2VsKSB7CiAgICAgICAgdmFyIG11bHRpSGVhZGVyID0gW1snSWQnLCAnTWFpbiBJbmZvcm1hdGlvbicsICcnLCAnJywgJ0RhdGUnXV07CiAgICAgICAgdmFyIGhlYWRlciA9IFsnJywgJ1RpdGxlJywgJ0F1dGhvcicsICdSZWFkaW5ncycsICcnXTsKICAgICAgICB2YXIgZmlsdGVyVmFsID0gWydpZCcsICd0aXRsZScsICdhdXRob3InLCAncGFnZXZpZXdzJywgJ2Rpc3BsYXlfdGltZSddOwogICAgICAgIHZhciBsaXN0ID0gX3RoaXMyLmxpc3Q7CgogICAgICAgIHZhciBkYXRhID0gX3RoaXMyLmZvcm1hdEpzb24oZmlsdGVyVmFsLCBsaXN0KTsKCiAgICAgICAgdmFyIG1lcmdlcyA9IFsnQTE6QTInLCAnQjE6RDEnLCAnRTE6RTInXTsKICAgICAgICBleGNlbC5leHBvcnRfanNvbl90b19leGNlbCh7CiAgICAgICAgICBtdWx0aUhlYWRlcjogbXVsdGlIZWFkZXIsCiAgICAgICAgICBoZWFkZXI6IGhlYWRlciwKICAgICAgICAgIG1lcmdlczogbWVyZ2VzLAogICAgICAgICAgZGF0YTogZGF0YQogICAgICAgIH0pOwogICAgICAgIF90aGlzMi5kb3dubG9hZExvYWRpbmcgPSBmYWxzZTsKICAgICAgfSk7CiAgICB9LAogICAgZm9ybWF0SnNvbjogZnVuY3Rpb24gZm9ybWF0SnNvbihmaWx0ZXJWYWwsIGpzb25EYXRhKSB7CiAgICAgIHJldHVybiBqc29uRGF0YS5tYXAoZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gZmlsdGVyVmFsLm1hcChmdW5jdGlvbiAoaikgewogICAgICAgICAgaWYgKGogPT09ICd0aW1lc3RhbXAnKSB7CiAgICAgICAgICAgIHJldHVybiBwYXJzZVRpbWUodltqXSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZXR1cm4gdltqXTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["merge-header.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,SAAA,SAAA,QAAA,eAAA;AACA,SAAA,SAAA,QAAA,SAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,WAAA,EAAA,IAFA;AAGA,MAAA,eAAA,EAAA;AAHA,KAAA;AAKA,GARA;AASA,EAAA,OATA,qBASA;AACA,SAAA,SAAA;AACA,GAXA;AAYA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA,WAAA,WAAA,GAAA,IAAA;AACA,MAAA,SAAA,CAAA,KAAA,SAAA,CAAA,CAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,KAAA;AACA,OAHA;AAIA,KAPA;AAQA,IAAA,cARA,4BAQA;AAAA;;AACA,WAAA,eAAA,GAAA,IAAA;AACA;AAAA,+CAAA,uBAAA;AAAA,SAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,WAAA,GAAA,CAAA,CAAA,IAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MAAA,CAAA,CAAA;AACA,YAAA,MAAA,GAAA,CAAA,EAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,EAAA,CAAA;AACA,YAAA,SAAA,GAAA,CAAA,IAAA,EAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,cAAA,CAAA;AACA,YAAA,IAAA,GAAA,MAAA,CAAA,IAAA;;AACA,YAAA,IAAA,GAAA,MAAA,CAAA,UAAA,CAAA,SAAA,EAAA,IAAA,CAAA;;AACA,YAAA,MAAA,GAAA,CAAA,OAAA,EAAA,OAAA,EAAA,OAAA,CAAA;AACA,QAAA,KAAA,CAAA,oBAAA,CAAA;AACA,UAAA,WAAA,EAAA,WADA;AAEA,UAAA,MAAA,EAAA,MAFA;AAGA,UAAA,MAAA,EAAA,MAHA;AAIA,UAAA,IAAA,EAAA;AAJA,SAAA;AAMA,QAAA,MAAA,CAAA,eAAA,GAAA,KAAA;AACA,OAdA;AAeA,KAzBA;AA0BA,IAAA,UA1BA,sBA0BA,SA1BA,EA0BA,QA1BA,EA0BA;AACA,aAAA,QAAA,CAAA,GAAA,CAAA,UAAA,CAAA;AAAA,eAAA,SAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,cAAA,CAAA,KAAA,WAAA,EAAA;AACA,mBAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA,WAFA,MAEA;AACA,mBAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,SANA,CAAA;AAAA,OAAA,CAAA;AAOA;AAlCA;AAZA,CAAA","sourcesContent":["<template>\n  <div class=\"app-container\">\n\n    <el-button :loading=\"downloadLoading\" style=\"margin-bottom:20px\" type=\"primary\" icon=\"el-icon-document\" @click=\"handleDownload\">Export</el-button>\n\n    <el-table\n      ref=\"multipleTable\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"Loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column align=\"center\" label=\"Id\" width=\"95\">\n        <template slot-scope=\"scope\">\n          {{ scope.$index }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Main Information\" align=\"center\">\n        <el-table-column label=\"Title\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.title }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Author\" width=\"110\" align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-tag>{{ scope.row.author }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"Readings\" width=\"115\" align=\"center\">\n          <template slot-scope=\"scope\">\n            {{ scope.row.pageviews }}\n          </template>\n        </el-table-column>\n      </el-table-column>\n      <el-table-column align=\"center\" label=\"Date\" width=\"220\">\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\" />\n          <span>{{ scope.row.timestamp | parseTime('{y}-{m}-{d} {h}:{i}') }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n\n  </div>\n</template>\n\n<script>\nimport { fetchList } from '@/api/article'\nimport { parseTime } from '@/utils'\n\nexport default {\n  name: 'MergeHeader',\n  data() {\n    return {\n      list: null,\n      listLoading: true,\n      downloadLoading: false\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      fetchList(this.listQuery).then(response => {\n        this.list = response.data.items\n        this.listLoading = false\n      })\n    },\n    handleDownload() {\n      this.downloadLoading = true\n      import('@/vendor/Export2Excel').then(excel => {\n        const multiHeader = [['Id', 'Main Information', '', '', 'Date']]\n        const header = ['', 'Title', 'Author', 'Readings', '']\n        const filterVal = ['id', 'title', 'author', 'pageviews', 'display_time']\n        const list = this.list\n        const data = this.formatJson(filterVal, list)\n        const merges = ['A1:A2', 'B1:D1', 'E1:E2']\n        excel.export_json_to_excel({\n          multiHeader,\n          header,\n          merges,\n          data\n        })\n        this.downloadLoading = false\n      })\n    },\n    formatJson(filterVal, jsonData) {\n      return jsonData.map(v => filterVal.map(j => {\n        if (j === 'timestamp') {\n          return parseTime(v[j])\n        } else {\n          return v[j]\n        }\n      }))\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views/excel"}]}